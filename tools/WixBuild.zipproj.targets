<?xml version="1.0" encoding="utf-8" ?>
<!--
  <copyright file="WixBuild.zipproj.targets" company="Outercurve Foundation">
    Copyright (c) 2004, Outercurve Foundation.
    This software is released under Microsoft Reciprocal License (MS-RL).
    The license and further copyright text can be found in the file LICENSE.TXT
    LICENSE.TXT at the root directory of the distribution.
  </copyright>
-->
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="$(StyleCopTargetsPath)" Condition=" '$(StyleCopEnabled)' == 'true' " />
  <PropertyGroup>
    <VS2010SdkTask Condition=" '$(VS2010SdkTask)' == '' AND '$(MSBuildExtensionsPath32)' != '' ">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v10.0\VSSDK\Microsoft.VsSDK.Build.Tasks.dll</VS2010SdkTask>
    <VS2010SdkTask Condition=" '$(VS2010SdkTask)' == '' ">$(MSBuildExtensionsPath)\Microsoft\VisualStudio\v10.0\VSSDK\Microsoft.VsSDK.Build.Tasks.dll</VS2010SdkTask>
  </PropertyGroup>

  <UsingTask TaskName="ZipItems" AssemblyFile="$(VS2010SdkTask)" />

  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildProjectFullPath)</MSBuildAllProjects>
    <ZipName Condition=" '$(ZipName)'=='' ">$(OutputName)</ZipName>
    <ZipRootPath Condition=" '$(ZipRootPath)'=='' ">$(MSBuildProjectDirectory)</ZipRootPath>
    <TargetPath>$(OutputPath)$(ZipOutputSubDirectory)\$(ZipName).zip</TargetPath>
  </PropertyGroup>

  <!--
  ================================================================================================
  Stage

    Stages items then creates the .zip files.

    [IN]
    @(Stage) - Items to stage.

    [OUT]
    @(Zip) - The items to zip.
  ================================================================================================
  -->
  <ItemDefinitionGroup>
    <Stage>
      <Hardlink>true</Hardlink>
    </Stage>
  </ItemDefinitionGroup>
  <Target Name="Stage"
          DependsOnTargets="_PrepareStageItems"
          Inputs="@(_Stage)"
          Outputs="$(TargetPath)"
          Condition=" '@(Stage)'!='' ">

    <Error Text="A .zipproj cannot have both Stage and Zip items. Remove one of the item types and rebuild." Condition=" '@(Zip)'!='' " />
    <Message Importance="low" Text="Stage = %(_Stage.Identity) -> %(_Stage.StageSubDirectory)"/>

    <Copy SourceFiles="@(_Stage)" DestinationFiles="%(_Stage.StageSubDirectory)"
          SkipUnchangedFiles="true" UseHardlinksIfPossible="%(_Stage.Hardlink)">
      <Output TaskParameter="CopiedFiles" ItemName="Zip"/>
      <Output TaskParameter="CopiedFiles" ItemName="FileWrites"/>
    </Copy>

    <PropertyGroup>
      <ZipRootPath>$(IntermediateOutputPath)</ZipRootPath>
    </PropertyGroup>
  </Target>

  <Target Name="_PrepareStageItems"
          Condition=" '@(Stage)'!='' ">
    <ItemGroup>
      <_Stage Include="@(Stage)" Condition=" '%(Stage.StageSubDirectory)'!='' ">
        <StageSubDirectory>$(IntermediateOutputPath)%(Stage.StageSubDirectory)\%(Stage.Filename)%(Stage.Extension)</StageSubDirectory>
        <Hardlink>%(Stage.Hardlink)</Hardlink>
      </_Stage>
      <_Stage Include="@(Stage)" Condition=" '%(Stage.StageSubDirectory)'=='' ">
        <StageSubDirectory>$(IntermediateOutputPath)$([MSBuild]::MakeRelative($(OutputPath), %(Identity)))</StageSubDirectory>
        <Hardlink>%(Stage.Hardlink)</Hardlink>
      </_Stage>
    </ItemGroup>
  </Target>

  <Target Name="Zip"
          Condition=" '@(Zip)'!='' ">
    <Message Importance="low" Text="(before) ZipRoot = $(ZipRootPath), Zip = @(Zip)" />

    <ZipItems
        Files="@(Zip)"
        Action="New"
        ProjectPath="$(ZipRootPath)"
        RootPath="$(ZipRootPath)"
        ZipFile="$(TargetPath)">
      <Output TaskParameter="ZipFile" ItemName="FileWrites"/>
    </ZipItems>
  </Target>

  <Target Name="Build"
          DependsOnTargets="Stage;Zip"
          Inputs="$(MSBuildAllProjects);$(MSBuildProjectFullPath);@(Stage);@(Zip)"
          Outputs="$(TargetPath)" />
</Project>